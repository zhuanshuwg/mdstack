<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:util="http://www.springframework.org/schema/util"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:task="http://www.springframework.org/schema/task"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
           http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
           http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
           http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd
           http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task-3.0.xsd
           http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-3.0.xsd"
	default-autowire="byName" default-lazy-init="false">
	
	<aop:aspectj-autoproxy/>      
	<context:annotation-config />
	
	<context:component-scan base-package="org.framework.core.aop" />
	
	<!-- 自动扫描dao和service包(自动注入) -->
	<context:component-scan base-package="org.framework.core.common.dao.*" />
	<context:component-scan base-package="org.framework.core.common.service.*" />
	
	<!-- 加载service,此时要排除要controller,因为controller已经spring-mvc中加载过了 -->
	<context:component-scan base-package="mdstack.*">
		<context:exclude-filter type="annotation"
			expression="org.springframework.stereotype.Controller" />
	</context:component-scan>

	<!-- 引入属性文件 -->
	<context:property-placeholder location="classpath:dbconfig.properties" />

	<bean id="dataSource_mdstack" class="com.mchange.v2.c3p0.ComboPooledDataSource"
		destroy-method="close">
		<property name="driverClass" value="${jdbc.driver}" />
		<property name="jdbcUrl" value="${jdbc.url}" />
		<property name="user" value="${jdbc.username}" />
		<property name="password" value="${jdbc.password}" />
		<property name="maxPoolSize" value="20" />
		<property name="minPoolSize" value="10" />
		<property name="initialPoolSize" value="10" />
		<property name="maxIdleTime" value="5000" />
	</bean>
	

	<!-- 数据源集合 -->
	<bean id="dataSource"
		class="org.framework.core.extend.datasource.DynamicDataSource">
		<property name="targetDataSources">
			<map key-type="org.framework.core.extend.datasource.DataSourceType">
				<entry key="dataSource_mdstack" value-ref="dataSource_mdstack" />
			</map>
		</property>
		<property name="defaultTargetDataSource" ref="dataSource_mdstack" />
	</bean>
	
	<bean id="sessionFactory" 
		class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<!--<property name="entityInterceptor" ref="hiberAspect" />
		--><property name="hibernateProperties">
			<props>
			
				<prop key="hibernate.dialect">${hibernate.dialect}</prop>
				<prop key="hibernate.hbm2ddl.auto">none</prop>
				<prop key="hibernate.show_sql">false</prop>
				<prop key="hibernate.format_sql">true</prop>
				<prop key="hibernate.temp.use_jdbc_metadata_defaults">false</prop>
			</props>
		</property>
		
		<!-- 注解方式配置 -->
		<property name="packagesToScan">
			<list>
				<value>mdstack.user.entity*</value>
				<value>mdstack.role.entity*</value>
			</list>
			
		</property>
	</bean>
	
	<bean id="dynamicStatementBuilder" 
			class="org.framework.core.statement.impl.DefaultDynamicStatementBuilder">
			<property name="mappingResources">
				<list>
					<value>classpath:mdstack/login/service/impl/login_sql.xml</value>
					<value>classpath:mdstack/user/service/impl/user_manage_sql.xml</value>
				</list>
			</property>
		</bean>
	<!-- 配置事物管理器，在*ServiceImpl里写@Transactional就可以启用事物管理 -->
	<bean name="transactionManager"
		class="org.springframework.orm.hibernate4.HibernateTransactionManager">
		<property name="sessionFactory" ref="sessionFactory"></property>
	</bean>
	<tx:annotation-driven transaction-manager="transactionManager" />

</beans>